knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
creditCard<- read.csv("C:/Users/mipc/OneDrive/Escritorio/master/intro_cienciaDatos/ejercicios/Credit_Card_Clients.csv")
creditCard<- read.csv("Credit_Card_Clients.csv")
str(creditCard)
creditCard<- read.csv("Credit_Card_Clients.csv", skip = 1)
#cambio el nomnre de la ultima variable pues tiene espacios
creditCard <- creditCard %>% rename(default_payment = default.payment.next.month)
dim(creditCard)
indx<- apply(creditCard, 2, function(x) any(is.na(x)))
#no hay ningun valor NA
creditCard[indx]
library(Amelia)
library(Amelia)
amelia(creditCard)
amelia(creditCard)
indx<- apply(creditCard, 2, function(x) any(is.na(x)))
#no hay ningun valor NA
creditCard[indx]
library(Amelia)
#amelia(creditCard)
#usar un missing mapara verlo mejor
str(creditCard)
creditCard <-apply(creditCard, 2, as.numeric)
#se observan que se repiten los mismo valores claves eso quiere decir que es una variable categoricas categorizadas como numericas
summary(creditCard)
library(ggplot2)
table(creditCard$EDUCATION)
library(ggplot2)
table(creditCard$EDUCATION)
table(creditCard$EDUCATION)
creditCard <-apply(creditCard, 2, as.numeric)
library(ggplot2)
table(creditCard$EDUCATION)
library(ggplot2)
table(creditCard$EDUCATION)
ggplot(creditCard, aes(x=EDUCATION))+
geom_histogram()
creditCard <- creditCard %>% mutate_if(is.character, as.numeric)
View(creditCard)
View(creditCard)
creditCard <- creditCard %>% mutate_if(is.character, as.numeric)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
summary(InsectSprays)
str(InsectSprays)
InsectSprays
boxplot(InsectSprays)
boxplot(InsectSprays$spray)
boxplot(InsectSprays$spray)
ggplot(InsectSprays, aes(x = spray))+
geom_boxplot()
str(InsectSprays)
ggplot(InsectSprays, aes(x = spray))+
geom_boxplot()
ggplot(InsectSprays, aes(x = spray, y = count))+
geom_boxplot()
dlookr(carseats)
library(ISLR)
library(ISLR)
dlookr(carseats)
dlookr()
dlookr(Carseats)
Carseats
library("tidyverse")
library("dplyr")
library("ISLR")
library("MASS")
# Cargo el dataset
wbcd <- read.csv("https://resources.oreilly.com/examples/9781784393908/raw/ac9fe41596dd42fc3877cfa8ed410dd346c43548/Machine%20Learning%20with%20R,%20Second%20Edition_Code/Chapter%2003/wisc_bc_data.csv")
# Preproceso los datos
#Elimino los id
wbcd <- wbcd %>% dplyr::select(-id)
# Recodifico los diagnosticos como un factor
wbcd <- wbcd %>% mutate(diagnosis = factor(diagnosis, labels = c("Benign", "Malignant")))
table(wbcd$diagnosis)
# Normalizo los datos
wbcd_n <- wbcd %>% mutate_if(is.numeric, scale, center = TRUE, scale = TRUE)
n <- nrow(wbcd_n)
percent <- (n * 0.8) %>% floor
train_sample <- sample(1:n, percent) # randomly pick 80% of the rows
test_sample <- setdiff(1:n, train_sample) # get the remaining 20% of the rows
wbcd_train <- wbcd_n[train_sample,] # subset the 80% of the rows
wbcd_test <- wbcd_n[test_sample,] # subset 20% of the rows
library(caret)
X_train <- wbcd_n[train_sample,] %>% dplyr::select(-diagnosis)
y_train <- wbcd_n[train_sample, "diagnosis"]
model_glm <- train(x = X_train, y = y_train, method = "glm", preProcess = c("center", "scale"), tuneLength = 10, trControl = trainControl(method = "cv"))
model_glm
glm_pred <- predict(model_glm, wbcd_test)
table(glm_pred, wbcd_test$diagnosis)
mean(glm_pred == wbcd_test$diagnosis)
glm_pred <- predict(model_glm, wbcd_n[test_sample,] %>% dplyr::select(-diagnosis))
table(glm_pred, wbcd_test$diagnosis)
mean(glm_pred == wbcd_test$diagnosis)
glm_pred <- predict(model_glm, wbcd_n[test_sample,] %>% dplyr::select(-diagnosis))
table(glm_pred, wbcd_test$diagnosis)
mean(glm_pred == wbcd_test$diagnosis)
glm_pred <- predict(model_glm, wbcd_n[test_sample,] %>% dplyr::select(-diagnosis))
table(glm_pred, wbcd_test$diagnosis)
mean(glm_pred == wbcd_test$diagnosis)
glm_pred <- predict(model_glm, wbcd_n[test_sample,] %>% dplyr::select(-diagnosis))
table(glm_pred, wbcd_test$diagnosis)
mean(glm_pred == wbcd_test$diagnosis)
test_data <- wbcd_n[test_sample,] %>% dplyr::select(-diagnosis)
glm_pred <- predict(model_glm, test_data)
table(glm_pred, wbcd_test$diagnosis)
mean(glm_pred == wbcd_test$diagnosis)
View(X_train)
View(X_train)
View(wbcd_test)
View(wbcd_test)
View(wbcd_train)
View(wbcd_train)
library(philentropy)
install.packages("philentropy")
library(philentropy)
getDistMethods()
# Cargo el dataset
wbcd <- read.csv("https://resources.oreilly.com/examples/9781784393908/raw/ac9fe41596dd42fc3877cfa8ed410dd346c43548/Machine%20Learning%20with%20R,%20Second%20Edition_Code/Chapter%2003/wisc_bc_data.csv")
# Preproceso los datos
#Elimino los id
wbcd <- wbcd %>% dplyr::select(-id)
# Recodifico los diagnosticos como un factor
wbcd <- wbcd %>% mutate(diagnosis = factor(diagnosis, labels = c("Benign", "Malignant")))
table(wbcd$diagnosis)
# Normalizo los datos
wbcd_n <- wbcd %>% mutate_if(is.numeric, scale, center = TRUE, scale = TRUE)
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("bikes_rent/train.csv")
data <- read.csv("train.csv")
data <- read.csv("train.csv")
# Podemos ver las variables que tenemos disponibles
names(data)
# Y un poco los valores que tenemos
head(data)
california <- read.csv('california.dat', comment.char = '@',
header = FALSE, stringsAsFactors = TRUE)
View(california)
View(california)
california <- read.csv('california.dat', comment.char = '@',
header = FALSE, stringsAsFactors = TRUE)
names(california) <- c("Longitude", "Latitude", "HousingMedianAge",
"TotalRooms", "TotalBedrooms", "Population", "Households",
"MedianIncome", "MedianHouseValue")
#Asignacion automatica, facilita el acceso a los campos
n <- length(names(california)) - 1
names(california)[1:n] <- paste ("X", 1:n, sep="")
names(california)[n+1] <- "Y"
View(california)
View(california)
california <- read.csv('california.dat', comment.char = '@',
header = FALSE, stringsAsFactors = TRUE)
names(california) <- c("Longitude", "Latitude", "HousingMedianAge",
"TotalRooms", "TotalBedrooms", "Population", "Households",
"MedianIncome", "MedianHouseValue")
#Asignacion automatica, facilita el acceso a los campos
n <- length(names(california)) - 1
names(california)[1:n] <- paste ("X", 1:n, sep="")
names(california)[n+1] <- "Y"
View(california)
View(california)
View(california)
View(california)
california <- read.csv('california.dat', comment.char = '@',
header = FALSE, stringsAsFactors = TRUE)
california <- read.csv('concrete.dat', comment.char = '@',
header = FALSE, stringsAsFactors = TRUE)
california <- read.csv('concrete.dat', comment.char = '@',
header = FALSE, stringsAsFactors = TRUE)
california <- read.csv('concrete.dat', comment.char = '@',
header = T, stringsAsFactors = TRUE)
california <- read.csv('california.dat', comment.char = '@',
header = T, stringsAsFactors = TRUE)
View(california)
View(california)
california <- read.csv('california.dat', comment.char = '@',
header = T)
california <- read.csv('california.dat', comment.char = '@',
header = FALSE, stringsAsFactors = TRUE)
california <- read.csv('california.dat', comment.char = '@',
header = FALSE, stringsAsFactors = TRUE)
dim(california)
str(california)
california <- read.csv('california.dat', comment.char = '@',
header = FALSE, stringsAsFactors = TRUE)
dim(california)
str(california)
names(california) <- c("Longitude", "Latitude", "HousingMedianAge",
"TotalRooms", "TotalBedrooms", "Population", "Households",
"MedianIncome", "MedianHouseValue")
#Asignacion automatica, facilita el acceso a los campos
n <- length(names(california)) - 1
names(california)[1:n] <- paste ("X", 1:n, sep="")
names(california)[n+1] <- "Y"
names(california) <- c("Longitude", "Latitude", "HousingMedianAge",
"TotalRooms", "TotalBedrooms", "Population", "Households",
"MedianIncome", "MedianHouseValue")
#Asignacion automatica, facilita el acceso a los campos
summary(california)
media = sapply(california,mean)
desviacion = sapply(california,sd)
# Mostramos los valores.
med_desv = cbind(media,desviacion)
med_desv
#Missing values
any(is.na(california))
